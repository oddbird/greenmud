// ----------------------------------------------------------------------------
// show baseline grid

%baseline {
  &::before {
    @include stretch;
    @include baseline-grid-background;
    content: " ";
  }
}

// ----------------------------------------------------------------------------
// vertical center

@mixin vertical-center(
  $container  : '&',
  $page: '.pagewrap'
) {
  $container  : unquote($container);
  $page: unquote($page);

  #{$container} {
    @include display-flex;
    @include align-items(center);
  }
  #{$page} {
    @include flex(1);
    width: 100%;
  }
}

%center-content {
  @include vertical-center;
}

// ----------------------------------------------------------------------------
// chapterwide pageturn mixin

$page-enter     : fadeInLeft fadeInRight;
$page-exit      : fadeOutLeft fadeOutRight;
$page-time      : 200ms;
$page-function  : ease;

@function get-pageturn(
  $enter    : $page-enter,
  $exit     : $page-exit,
  $time     : $page-time,
  $function : $page-function
) {
  $enter    : if(type-of($enter) != 'list', $enter $enter, $enter);
  $exit     : if(type-of($exit) != 'list', $exit $exit, $exit);
  $time     : if(type-of($time) != 'list', $time $time, $time);

  $inPrev   : nth($enter,1) nth($time,1) $function backwards;
  $inNext   : nth($enter,2) nth($time,1) $function backwards;
  $outPrev  : nth($exit,1)  nth($time,2) $function forwards;
  $outNext  : nth($exit,2)  nth($time,2) $function forwards;

  @return $inPrev $inNext $outPrev $outNext;
}

@mixin pageturn(
  $enter    : $page-enter,
  $exit     : $page-exit,
  $time     : $page-time,
  $function : $page-function,
  $nested   : false
) {
  $enter    : if(type-of($enter) != 'list', $enter $enter, $enter);
  $exit     : if(type-of($exit) != 'list', $exit $exit, $exit);
  $time     : if(type-of($time) != 'list', $time $time, $time);

  $inPrev   : if($nested, '&.enter-prev', '.enter-prev');
  $inNext   : if($nested, '&.enter-next', '.enter-next');
  $outPrev  : if($nested, '&.exit-prev', '.exit-prev');
  $outNext  : if($nested, '&.exit-next', '.exit-next');

  // output the animations
  #{$inPrev}  { @extend %#{nth($enter,1)}; }
  #{$inNext}  { @extend %#{nth($enter,2)}; }
  #{$outPrev} { @extend %#{nth($exit,1)}; }
  #{$outNext} { @extend %#{nth($exit,2)}; }

  // set the duration and fill
  #{$inPrev}, #{$inNext}    {
    @include animation-duration(nth($time,1));
    @include animation-fill-mode(backwards);
  }
  #{$outPrev}, #{$outNext}  {
    @include animation-duration(nth($time,2));
    @include animation-fill-mode(forwards);
  }

  // set the function
  #{$inPrev}, #{$inNext}, #{$outPrev}, #{$outNext} {
    @include animation-timing-function($function);
  }
}

// ----------------------------------------------------------------------------
// pageturn entrance mixins

@mixin enter-prev($animations...) {
  &.enter-prev {
    @if $animations { @include animation($animations); }
    @content;
  }
}

@mixin enter-next($animations...) {
  &.enter-next {
    @if $animations { @include animation($animations); }
    @content;
  }
}

@mixin enter($animations...) {
  &.enter-prev, &.enter-next {
    @if $animations { @include animation($animations); }
    @content;
  }
}

// ----------------------------------------------------------------------------
// pageturn exit mixins

@mixin exit-prev($animations...) {
  &.exit-prev {
    @if $animations { @include animation($animations); }
    @content;
  }
}

@mixin exit-next($animations...) {
  &.exit-next {
    @if $animations { @include animation($animations); }
    @content;
  }
}

@mixin exit($animations...) {
  &.exit-prev, &.exit-next {
    @if $animations { @include animation($animations); }
    @content;
  }
}

// ----------------------------------------------------------------------------
// pageturn mixin

@mixin page-animation($animations...) {
  @include animation($animations...);
  @include enter-prev (nth(get-pageturn(),1), $animations);
  @include enter-next (nth(get-pageturn(),2), $animations);
  @include exit-prev  (nth(get-pageturn(),3), $animations);
  @include exit-next  (nth(get-pageturn(),4), $animations);
}

// ----------------------------------------------------------------------------
// pagepadding

@mixin pagespace($property, $hspace...) {
  @each $pair in $hspace {
    $height: rhythm(nth($pair,1));
    $top-padding: rhythm(nth($pair,2));
    $bottom-padding: $top-padding;
    @if length($pair) > 2 { $bottom-padding: nth($pair,3); }
    @if unit($height) == "rem" { $height: ($height / 1rem) * 1em; }
    @include breakpoint(min-height $height) { //;
      #{$property}-top: $top-padding;
      #{$property}-bottom: $bottom-padding;
    }
  }
}

@mixin pagepad($hpad...) { @include pagespace(padding, $hpad...); }
@mixin pagemargin($hmargin...) { @include pagespace(margin, $hmargin...); }
